<div class="dashboard-container">
  <div class="dashboard-header">
    <h1>👥 Gestion des Utilisateurs</h1>
  </div>

  <nav class="nav-menu">
    <a href="/dashboard" class="nav-btn">🏠 Tableau de bord</a>
    <a href="/catways" class="nav-btn">🚢 Catways</a>
    <a href="/reservations" class="nav-btn">📋 Réservations</a>
    <a href="/logout" class="nav-btn logout">🚪 Déconnexion</a>
  </nav>

  <div class="table-container">
    <button class="btn-add" onclick="showAddForm()">➕ Ajouter un utilisateur</button>
    
    <div id="error" class="error"></div>
    <div id="success" class="success"></div>

    <!-- Formulaire ajout/modification -->
    <div id="userForm" style="display: none; margin-bottom: 30px; padding: 20px; background: #f8f9fa; border-radius: 8px;">
      <h3 id="formTitle">Ajouter un utilisateur</h3>
      <form id="formUser">
        <input type="hidden" id="userEmail">
        
        <div class="form-group">
          <label for="username">Nom d'utilisateur *</label>
          <input type="text" id="username" required minlength="3">
        </div>
        
        <div class="form-group">
          <label for="email">Email *</label>
          <input type="email" id="email" required>
        </div>
        
        <div class="form-group">
          <label for="password">Mot de passe *</label>
          <input type="password" id="password" required minlength="6">
          <small style="color: #666;">Minimum 6 caractères</small>
        </div>
        
        <button type="submit" class="btn-primary">Enregistrer</button>
        <button type="button" class="btn-action" onclick="hideForm()" style="margin-left: 10px;">Annuler</button>
      </form>
    </div>

    <h2>Liste des utilisateurs</h2>
    <table id="usersTable">
      <thead>
        <tr>
          <th>Nom d'utilisateur</th>
          <th>Email</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="usersBody">
        <tr>
          <td colspan="3" style="text-align: center;">Chargement...</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>

<script>
  let editMode = false;

  document.addEventListener('DOMContentLoaded', loadUsers);

  async function loadUsers() {
    try {
      const response = await fetch('/api/users');
      const data = await response.json();
      
      const tbody = document.getElementById('usersBody');
      
      if (data.success && data.data.length > 0) {
        tbody.innerHTML = data.data.map(user => `
          <tr>
            <td>${user.username}</td>
            <td>${user.email}</td>
            <td>
              <button class="btn-action btn-edit" onclick="editUser('${user.email}')">✏️ Modifier</button>
              <button class="btn-action btn-delete" onclick="deleteUser('${user.email}')">🗑️ Supprimer</button>
            </td>
          </tr>
        `).join('');
      } else {
        tbody.innerHTML = '<tr><td colspan="3" style="text-align: center; color: #999;">Aucun utilisateur trouvé</td></tr>';
      }
    } catch (error) {
      console.error('Erreur chargement:', error);
      showError('Erreur lors du chargement des utilisateurs');
    }
  }

  function showAddForm() {
    editMode = false;
    document.getElementById('formTitle').textContent = 'Ajouter un utilisateur';
    document.getElementById('formUser').reset();
    document.getElementById('userEmail').value = '';
    document.getElementById('email').disabled = false;
    document.getElementById('password').required = true;
    document.getElementById('userForm').style.display = 'block';
  }

  async function editUser(email) {
    try {
      const response = await fetch(`/api/users/${encodeURIComponent(email)}`);
      const data = await response.json();
      
      if (data.success) {
        editMode = true;
        document.getElementById('formTitle').textContent = 'Modifier l\'utilisateur';
        document.getElementById('userEmail').value = data.data.email;
        document.getElementById('username').value = data.data.username;
        document.getElementById('email').value = data.data.email;
        document.getElementById('email').disabled = true;
        document.getElementById('password').value = '';
        document.getElementById('password').required = false;
        document.getElementById('userForm').style.display = 'block';
      }
    } catch (error) {
      showError('Erreur lors du chargement de l\'utilisateur');
    }
  }

  async function deleteUser(email) {
    if (!confirm(`Supprimer l'utilisateur ${email} ?`)) return;
    
    try {
      const response = await fetch(`/api/users/${encodeURIComponent(email)}`, {
        method: 'DELETE'
      });
      
      const data = await response.json();
      
      if (data.success) {
        showSuccess('Utilisateur supprimé avec succès');
        loadUsers();
      } else {
        showError(data.message);
      }
    } catch (error) {
      showError('Erreur lors de la suppression');
    }
  }

  document.getElementById('formUser').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = {
      username: document.getElementById('username').value,
      email: document.getElementById('email').value,
    };
    
    const password = document.getElementById('password').value;
    if (password) {
      formData.password = password;
    }
    
    try {
      const email = editMode ? document.getElementById('userEmail').value : formData.email;
      const url = editMode ? `/api/users/${encodeURIComponent(email)}` : '/api/users';
      const method = editMode ? 'PUT' : 'POST';
      
      const response = await fetch(url, {
        method: method,
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
      });
      
      const data = await response.json();
      
      if (data.success) {
        showSuccess(editMode ? 'Utilisateur modifié avec succès' : 'Utilisateur créé avec succès');
        hideForm();
        loadUsers();
      } else {
        showError(data.message);
      }
    } catch (error) {
      showError('Erreur lors de l\'enregistrement');
    }
  });

  function hideForm() {
    document.getElementById('userForm').style.display = 'none';
    document.getElementById('formUser').reset();
  }

  function showError(msg) {
    const errorDiv = document.getElementById('error');
    errorDiv.textContent = msg;
    errorDiv.style.display = 'block';
    setTimeout(() => errorDiv.style.display = 'none', 5000);
  }

  function showSuccess(msg) {
    const successDiv = document.getElementById('success');
    successDiv.textContent = msg;
    successDiv.style.display = 'block';
    setTimeout(() => successDiv.style.display = 'none', 5000);
  }
</script>